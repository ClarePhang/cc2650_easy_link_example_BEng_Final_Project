/******************************************************************************
*            TEXAS INSTRUMENTS INCORPORATED PROPRIETARY INFORMATION
*
*   Property of Texas Instruments
*   For  Unrestricted  Internal  Use  Only
*   Unauthorized reproduction and/or distribution is strictly prohibited.
*   This product is protected under copyright law and trade secret law
*   as an unpublished work.
*   Created 2011, (C) Copyright 2011 Texas Instruments.  All rights reserved.
*
*          ***** PROVISIONAL CODE - FOR DEMONSTRATION USE ONLY *****
*
*                       ---------------------------------
* ----------------------- NB This file is autogenerated -----------------------
*                       ---------------------------------
*
******************************************************************************/

#ifndef __FACTORY_CFG_H__
#define __FACTORY_CFG_H__

//*****************************************************************************
//
// The following are defines for the FACTORY_CFG register offsets.
//
//*****************************************************************************
#define FACTORY_CFG_O_SHDW_EFUSE_CONTROL \
                                0x0000010C  

#define FACTORY_CFG_O_SHDW_REDUNDANT0 \
                                0x00000110  

#define FACTORY_CFG_O_SHDW_REDUNDANT1 \
                                0x00000114  

#define FACTORY_CFG_O_SHDW_DIE_ID_0 \
                                0x00000118  

#define FACTORY_CFG_O_SHDW_DIE_ID_1 \
                                0x0000011C  

#define FACTORY_CFG_O_SHDW_DIE_ID_2 \
                                0x00000120  

#define FACTORY_CFG_O_SHDW_DIE_ID_3 \
                                0x00000124  

#define FACTORY_CFG_O_SHDW_SCAN_DATA0 \
                                0x00000128  

#define FACTORY_CFG_O_SHDW_SCAN_DATA1 \
                                0x0000012C  

#define FACTORY_CFG_O_SHDW_SCAN_DATA2_BOOT \
                                0x00000130  

#define FACTORY_CFG_O_SHDW_BANK_TRIM_BOOT \
                                0x00000134  

#define FACTORY_CFG_O_SHDW_OSC_BIAS_LDO_TRIM \
                                0x00000138  

#define FACTORY_CFG_O_SHDW_ANA_TRIM \
                                0x0000013C  

#define FACTORY_CFG_O_FLASH_E_P 0x00000170  
#define FACTORY_CFG_O_FLASH_C_E_P_R \
                                0x00000174  

#define FACTORY_CFG_O_FLASH_P_R_PV \
                                0x00000178  

#define FACTORY_CFG_O_FLASH_EH_SEQ \
                                0x0000017C  

#define FACTORY_CFG_O_FLASH_VHV_E \
                                0x00000180  

#define FACTORY_CFG_O_FLASH_PP  0x00000184  
#define FACTORY_CFG_O_FLASH_PROG_EP \
                                0x00000188  

#define FACTORY_CFG_O_FLASH_ERA_PW \
                                0x0000018C  

#define FACTORY_CFG_O_FLASH_VHV 0x00000190  
#define FACTORY_CFG_O_FLASH_VHV_PV \
                                0x00000194  

#define FACTORY_CFG_O_FLASH_V   0x00000198  
#define FACTORY_CFG_O_USER_ID   0x00000294  
#define FACTORY_CFG_O_FLASH_OTP_DATA1 \
                                0x000002A8  

#define FACTORY_CFG_O_FLASH_OTP_DATA2 \
                                0x000002AC  

#define FACTORY_CFG_O_FLASH_OTP_DATA3 \
                                0x000002B0  

#define FACTORY_CFG_O_MAC_BLE_0 0x000002E8  
#define FACTORY_CFG_O_MAC_BLE_1 0x000002EC  
#define FACTORY_CFG_O_MAC_15_4_0 \
                                0x000002F0  

#define FACTORY_CFG_O_MAC_15_4_1 \
                                0x000002F4  

#define FACTORY_CFG_O_ICEPICK_DEVICE_ID \
                                0x00000318  

#define FACTORY_CFG_O_FCFG1_REVISION \
                                0x0000031C  

#define FACTORY_CFG_O_MISC_OTP_DATA \
                                0x00000320  

#define FACTORY_CFG_O_CONFIG_IF_ADC \
                                0x0000034C  

#define FACTORY_CFG_O_CONFIG_OSC_TOP \
                                0x00000350  

#define FACTORY_CFG_O_CONFIG_RF_FRONTEND \
                                0x00000354  

#define FACTORY_CFG_O_CONFIG_SYNTH \
                                0x00000358  

#define FACTORY_CFG_O_SOC_ADC_ABS_GAIN \
                                0x0000035C  

#define FACTORY_CFG_O_SOC_ADC_REL_GAIN \
                                0x00000360  

#define FACTORY_CFG_O_SOC_ADC_EXT_GAIN \
                                0x00000364  

#define FACTORY_CFG_O_SOC_ADC_OFFSET_INT \
                                0x00000368  

#define FACTORY_CFG_O_SOC_ADC_REF_TRIM_AND_OFFSET_EXT \
                                0x0000036C  

#define FACTORY_CFG_O_AMPCOMP_TH1 \
                                0x00000370  

#define FACTORY_CFG_O_AMPCOMP_TH2 \
                                0x00000374  

#define FACTORY_CFG_O_AMPCOMP_CTRL1 \
                                0x00000378  

#define FACTORY_CFG_O_ANABYPASS_VALUE2 \
                                0x0000037C  

#define FACTORY_CFG_O_CONFIG_MISC_ADC \
                                0x00000380  

#define FACTORY_CFG_O_TEST_TEMPS \
                                0x00000384  

#define FACTORY_CFG_O_VOLT_TRIM 0x00000388  
#define FACTORY_CFG_O_OSC_CONF  0x0000038C  
#define FACTORY_CFG_O_FREQ_OFFSET \
                                0x00000390  

#define FACTORY_CFG_O_CAP_TRIM  0x00000394  

//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_SHDW_EFUSE_CONTROL register.
//
//*****************************************************************************
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_SHDW_REDUNDANT0 register.
//
//*****************************************************************************
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_SHDW_REDUNDANT1 register.
//
//*****************************************************************************
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_SHDW_DIE_ID_0 register.
//
//*****************************************************************************
#define FACTORY_CFG_SHDW_DIE_ID_0_ID_31_0_M \
                                0xFFFFFFFF  // Shadow of corresponding bits in 
                                            // efuse row number 3 [PROD: X] 

#define FACTORY_CFG_SHDW_DIE_ID_0_ID_31_0_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_SHDW_DIE_ID_1 register.
//
//*****************************************************************************
#define FACTORY_CFG_SHDW_DIE_ID_1_ID_63_32_M \
                                0xFFFFFFFF  // Shadow of corresponding bits in 
                                            // efuse row number 4 [PROD: X] 

#define FACTORY_CFG_SHDW_DIE_ID_1_ID_63_32_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_SHDW_DIE_ID_2 register.
//
//*****************************************************************************
#define FACTORY_CFG_SHDW_DIE_ID_2_ID_95_64_M \
                                0xFFFFFFFF  // Shadow of corresponding bits in 
                                            // efuse row number 5 [PROD: X] 

#define FACTORY_CFG_SHDW_DIE_ID_2_ID_95_64_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_SHDW_DIE_ID_3 register.
//
//*****************************************************************************
#define FACTORY_CFG_SHDW_DIE_ID_3_ID_127_96_M \
                                0xFFFFFFFF  // Shadow of corresponding bits in 
                                            // efuse row number 6 [PROD: X] 

#define FACTORY_CFG_SHDW_DIE_ID_3_ID_127_96_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_SHDW_SCAN_DATA0 register.
//
//*****************************************************************************
#define FACTORY_CFG_SHDW_SCAN_DATA0_ULL_MCU_RAM1_REP_M \
                                0xE0000000  // Shadow of corresponding bits in 
                                            // efuse row number 7 [PROD: X] 

#define FACTORY_CFG_SHDW_SCAN_DATA0_ULL_MCU_RAM1_REP_S 29
#define FACTORY_CFG_SHDW_SCAN_DATA0_ULL_MCU_RAM2_REP_M \
                                0x1FF80000  // Shadow of corresponding bits in 
                                            // efuse row number 7 [PROD: X] 

#define FACTORY_CFG_SHDW_SCAN_DATA0_ULL_MCU_RAM2_REP_S 19
#define FACTORY_CFG_SHDW_SCAN_DATA0_ULL_MCU_RAM3_REP_M \
                                0x0007FE00  // Shadow of corresponding bits in 
                                            // efuse row number 7 [PROD: X] 

#define FACTORY_CFG_SHDW_SCAN_DATA0_ULL_MCU_RAM3_REP_S 9
#define FACTORY_CFG_SHDW_SCAN_DATA0_ULL_AUX_RAM_REP_M \
                                0x000001FE  // Shadow of corresponding bits in 
                                            // efuse row number 7 [PROD: X] 

#define FACTORY_CFG_SHDW_SCAN_DATA0_ULL_AUX_RAM_REP_S 1
#define FACTORY_CFG_SHDW_SCAN_DATA0_TAP_DAP_LOCK \
                                0x00000001  // Shadow of corresponding bits in 
                                            // efuse row number 7 [PROD: X] 

#define FACTORY_CFG_SHDW_SCAN_DATA0_TAP_DAP_LOCK_M \
                                0x00000001
#define FACTORY_CFG_SHDW_SCAN_DATA0_TAP_DAP_LOCK_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_SHDW_SCAN_DATA1 register.
//
//*****************************************************************************
#define FACTORY_CFG_SHDW_SCAN_DATA1_ULL_MCU_RAM0_REP_M \
                                0x0001FF80  // Shadow of corresponding bits in 
                                            // efuse row number 8 [PROD: X] 

#define FACTORY_CFG_SHDW_SCAN_DATA1_ULL_MCU_RAM0_REP_S 7
#define FACTORY_CFG_SHDW_SCAN_DATA1_ULL_MCU_RAM1_REP_M \
                                0x0000007F  // Shadow of corresponding bits in 
                                            // efuse row number 8 [PROD: X] 

#define FACTORY_CFG_SHDW_SCAN_DATA1_ULL_MCU_RAM1_REP_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_SHDW_SCAN_DATA2_BOOT register.
//
//*****************************************************************************
#define FACTORY_CFG_SHDW_SCAN_DATA2_BOOT_FLASH_RDY \
                                0x80000000  // Shadow of corresponding bits in 
                                            // efuse row number 9 [PROD: X] 

#define FACTORY_CFG_SHDW_SCAN_DATA2_BOOT_FLASH_RDY_M \
                                0x80000000
#define FACTORY_CFG_SHDW_SCAN_DATA2_BOOT_FLASH_RDY_S 31
#define FACTORY_CFG_SHDW_SCAN_DATA2_BOOT_CRC_M \
                                0x000001FE  // Shadow of corresponding bits in 
                                            // efuse row number 9 [PROD: X] 

#define FACTORY_CFG_SHDW_SCAN_DATA2_BOOT_CRC_S 1
#define FACTORY_CFG_SHDW_SCAN_DATA2_BOOT_TAP_DAP_LOCK_N \
                                0x00000001  // Shadow of corresponding bits in 
                                            // efuse row number 9 [PROD: X] 

#define FACTORY_CFG_SHDW_SCAN_DATA2_BOOT_TAP_DAP_LOCK_N_M \
                                0x00000001
#define FACTORY_CFG_SHDW_SCAN_DATA2_BOOT_TAP_DAP_LOCK_N_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_SHDW_BANK_TRIM_BOOT register.
//
//*****************************************************************************
#define FACTORY_CFG_SHDW_BANK_TRIM_BOOT_ROM_BOOT \
                                0x20000000  // Shadow of corresponding bits in 
                                            // efuse row number 10 [PROD: X] 

#define FACTORY_CFG_SHDW_BANK_TRIM_BOOT_ROM_BOOT_M \
                                0x20000000
#define FACTORY_CFG_SHDW_BANK_TRIM_BOOT_ROM_BOOT_S 29
#define FACTORY_CFG_SHDW_BANK_TRIM_BOOT_TRIM3P4_M \
                                0x1E000000  // Shadow of corresponding bits in 
                                            // efuse row number 10 [PROD: X] 

#define FACTORY_CFG_SHDW_BANK_TRIM_BOOT_TRIM3P4_S 25
#define FACTORY_CFG_SHDW_BANK_TRIM_BOOT_VCG2P5CT_M \
                                0x01E00000  // Shadow of corresponding bits in 
                                            // efuse row number 10 [PROD: X] 

#define FACTORY_CFG_SHDW_BANK_TRIM_BOOT_VCG2P5CT_S 21
#define FACTORY_CFG_SHDW_BANK_TRIM_BOOT_VREADCT_M \
                                0x001E0000  // Shadow of corresponding bits in 
                                            // efuse row number 10 [PROD: X] 

#define FACTORY_CFG_SHDW_BANK_TRIM_BOOT_VREADCT_S 17
#define FACTORY_CFG_SHDW_BANK_TRIM_BOOT_TRIM_0P8_M \
                                0x0001E000  // Shadow of corresponding bits in 
                                            // efuse row number 10 [PROD: X] 

#define FACTORY_CFG_SHDW_BANK_TRIM_BOOT_TRIM_0P8_S 13
#define FACTORY_CFG_SHDW_BANK_TRIM_BOOT_TRIM_M \
                                0x00001FFF  // Shadow of corresponding bits in 
                                            // efuse row number 10 [PROD: X] 

#define FACTORY_CFG_SHDW_BANK_TRIM_BOOT_TRIM_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_SHDW_OSC_BIAS_LDO_TRIM register.
//
//*****************************************************************************
#define FACTORY_CFG_SHDW_OSC_BIAS_LDO_TRIM_TRIMMAG_M \
                                0x07800000  // Shadow of corresponding bits in 
                                            // efuse row number 11 [PROD: X] 

#define FACTORY_CFG_SHDW_OSC_BIAS_LDO_TRIM_TRIMMAG_S 23
#define FACTORY_CFG_SHDW_OSC_BIAS_LDO_TRIM_TRIMIREF_M \
                                0x007C0000  // Shadow of corresponding bits in 
                                            // efuse row number 11 [PROD: X] 

#define FACTORY_CFG_SHDW_OSC_BIAS_LDO_TRIM_TRIMIREF_S 18
#define FACTORY_CFG_SHDW_OSC_BIAS_LDO_TRIM_ITRIM_DIG_LDO_M \
                                0x00030000  // Shadow of corresponding bits in 
                                            // efuse row number 11 [PROD: X] 

#define FACTORY_CFG_SHDW_OSC_BIAS_LDO_TRIM_ITRIM_DIG_LDO_S 16
#define FACTORY_CFG_SHDW_OSC_BIAS_LDO_TRIM_VTRIM_DIG_M \
                                0x0000F000  // Shadow of corresponding bits in 
                                            // efuse row number 11 [PROD: X] 

#define FACTORY_CFG_SHDW_OSC_BIAS_LDO_TRIM_VTRIM_DIG_S 12
#define FACTORY_CFG_SHDW_OSC_BIAS_LDO_TRIM_VTRIM_COARSE_M \
                                0x00000F00  // Shadow of corresponding bits in 
                                            // efuse row number 11 [PROD: X] 

#define FACTORY_CFG_SHDW_OSC_BIAS_LDO_TRIM_VTRIM_COARSE_S 8
#define FACTORY_CFG_SHDW_OSC_BIAS_LDO_TRIM_RCOSCHF_CTRIM_M \
                                0x000000FF  // Shadow of corresponding bits in 
                                            // efuse row number 11 [PROD: X] 

#define FACTORY_CFG_SHDW_OSC_BIAS_LDO_TRIM_RCOSCHF_CTRIM_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_SHDW_ANA_TRIM register.
//
//*****************************************************************************
#define FACTORY_CFG_SHDW_ANA_TRIM_VDDR_OK_HYS \
                                0x00800000  // Shadow of corresponding bits in 
                                            // efuse row number 12 [PROD: X] 

#define FACTORY_CFG_SHDW_ANA_TRIM_VDDR_OK_HYS_M \
                                0x00800000
#define FACTORY_CFG_SHDW_ANA_TRIM_VDDR_OK_HYS_S 23
#define FACTORY_CFG_SHDW_ANA_TRIM_IPTAT_TRIM_M \
                                0x00600000  // Shadow of corresponding bits in 
                                            // efuse row number 12 [PROD: X] 

#define FACTORY_CFG_SHDW_ANA_TRIM_IPTAT_TRIM_S 21
#define FACTORY_CFG_SHDW_ANA_TRIM_VDDR_TRIM_M \
                                0x001F0000  // Shadow of corresponding bits in 
                                            // efuse row number 12 [PROD: X] 

#define FACTORY_CFG_SHDW_ANA_TRIM_VDDR_TRIM_S 16
#define FACTORY_CFG_SHDW_ANA_TRIM_TRIMBOD_INTMODE_M \
                                0x0000F800  // Shadow of corresponding bits in 
                                            // efuse row number 12 [PROD: X] 

#define FACTORY_CFG_SHDW_ANA_TRIM_TRIMBOD_INTMODE_S 11
#define FACTORY_CFG_SHDW_ANA_TRIM_TRIMBOD_EXTMODE_M \
                                0x000007C0  // Shadow of corresponding bits in 
                                            // efuse row number 12 [PROD: X] 

#define FACTORY_CFG_SHDW_ANA_TRIM_TRIMBOD_EXTMODE_S 6
#define FACTORY_CFG_SHDW_ANA_TRIM_TRIMTEMP_M \
                                0x0000003F  // Shadow of corresponding bits in 
                                            // efuse row number 12 [PROD: X] 

#define FACTORY_CFG_SHDW_ANA_TRIM_TRIMTEMP_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_FLASH_E_P register.
//
//*****************************************************************************
#define FACTORY_CFG_FLASH_E_P_PSU_M \
                                0xFF000000  // Program setup time in cycles. 
                                            // Value will be written to the 
                                            // PGM_OSU field bits[15:8] of the 
                                            // FSM_PE_OSU register in the flash 
                                            // module by the flash device 
                                            // driver when an erase/program 
                                            // operation is initiated. [PROD: 
                                            // DP] 

#define FACTORY_CFG_FLASH_E_P_PSU_S 24
#define FACTORY_CFG_FLASH_E_P_ESU_M \
                                0x00FF0000  // Erase setup time in cycles. 
                                            // Value will be written to the 
                                            // ERA_OSU field bits[7:0] of the 
                                            // FSM_PE_OSU register in the flash 
                                            // module by the flash device 
                                            // driver when an erase/program 
                                            // operation is initiated. [PROD: 
                                            // DP] 

#define FACTORY_CFG_FLASH_E_P_ESU_S 16
#define FACTORY_CFG_FLASH_E_P_PVSU_M \
                                0x0000FF00  // Program verify setup time in 
                                            // cycles. Value will be written to 
                                            // the PGM_VSU field bits[15:8] of 
                                            // the FSM_PE_VSU register in the 
                                            // flash module by the flash device 
                                            // driver when an erase/program 
                                            // operation is initiated. [PROD: 
                                            // DP] 

#define FACTORY_CFG_FLASH_E_P_PVSU_S 8
#define FACTORY_CFG_FLASH_E_P_EVSU_M \
                                0x000000FF  // Erase verify setup time in 
                                            // cycles. Value will be written to 
                                            // the ERA_VSU field bits[7:0] of 
                                            // the FSM_PE_VSU register in the 
                                            // flash module by the flash device 
                                            // driver when an erase/program 
                                            // operation is initiated. [PROD: 
                                            // DP] 

#define FACTORY_CFG_FLASH_E_P_EVSU_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_FLASH_C_E_P_R register.
//
//*****************************************************************************
#define FACTORY_CFG_FLASH_C_E_P_R_RVSU_M \
                                0xFF000000  // Repeat verify setup time in 
                                            // cycles. Used for repeated 
                                            // verifies during program and 
                                            // erase. Value will be written to 
                                            // the REP_VSU field bits[15:8] of 
                                            // the FSM_EX_VAL register in the 
                                            // flash module by the flash device 
                                            // driver when an erase/program 
                                            // operation is initiated. [PROD: 
                                            // DP] 

#define FACTORY_CFG_FLASH_C_E_P_R_RVSU_S 24
#define FACTORY_CFG_FLASH_C_E_P_R_PV_ACCESS_M \
                                0x00FF0000  // Program verify EXECUTEZ->data 
                                            // valid time in half-microseconds. 
                                            // Value will be converted to 
                                            // number of FCLK cycles by by 
                                            // flash device driver and the 
                                            // converted value is written to 
                                            // the EXE_VALD field bits[7:0] of 
                                            // the FSM_EX_VAL register in the 
                                            // flash module when an 
                                            // erase/program operation is 
                                            // initiated.. [PROD: DP] 

#define FACTORY_CFG_FLASH_C_E_P_R_PV_ACCESS_S 16
#define FACTORY_CFG_FLASH_C_E_P_R_A_EXEZ_SETUP_M \
                                0x0000F000  // Address->EXECUTEZ setup time in 
                                            // cycles. Value will be written to 
                                            // the ADD_EXZ field bits[15:12] of 
                                            // the FSM_CMP_VSU register in the 
                                            // flash module by the flash device 
                                            // driver when an erase/program 
                                            // operation is initiated.. [PROD: 
                                            // DP] 

#define FACTORY_CFG_FLASH_C_E_P_R_A_EXEZ_SETUP_S 12
#define FACTORY_CFG_FLASH_C_E_P_R_CVSU_M \
                                0x00000FFF  // Compaction verify setup time in 
                                            // cycles. 

#define FACTORY_CFG_FLASH_C_E_P_R_CVSU_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_FLASH_P_R_PV register.
//
//*****************************************************************************
#define FACTORY_CFG_FLASH_P_R_PV_PH_M \
                                0xFF000000  // Program hold time in 
                                            // half-microseconds after SAFELV 
                                            // goes low. Value will be 
                                            // converted to number of FCLK 
                                            // cycles by the flash device 
                                            // driver and the converted value 
                                            // is written to the PGM_OH field 
                                            // bits[15:8] of the FSM_P_OH 
                                            // register in the flash module 
                                            // when an erase/program operation 
                                            // is initiated. [PROD: DP] 

#define FACTORY_CFG_FLASH_P_R_PV_PH_S 24
#define FACTORY_CFG_FLASH_P_R_PV_RH_M \
                                0x00FF0000  // Read hold/mode transition time 
                                            // in cycles. Value will be written 
                                            // to the RD_H field bits[7:0] of 
                                            // the FSM_RD_H register in the 
                                            // flash module by the flash device 
                                            // driver when an erase/program 
                                            // operation is initiated. [PROD: 
                                            // DP] 

#define FACTORY_CFG_FLASH_P_R_PV_RH_S 16
#define FACTORY_CFG_FLASH_P_R_PV_PVH_M \
                                0x0000FF00  // Program verify hold time in 
                                            // half-microseconds after SAFELV 
                                            // goes low. Value will be 
                                            // converted to number of FCLK 
                                            // cycles by the flash device 
                                            // driver and the converted value 
                                            // is written to the PGM_VH field 
                                            // bits[15:0] of the FSM_PE_VH 
                                            // register in the flash module 
                                            // when an erase/program operation 
                                            // is initiated. [PROD: DP] 

#define FACTORY_CFG_FLASH_P_R_PV_PVH_S 8
#define FACTORY_CFG_FLASH_P_R_PV_PVH2_M \
                                0x000000FF  // Program verify row switch time 
                                            // in half-microseconds. 

#define FACTORY_CFG_FLASH_P_R_PV_PVH2_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_FLASH_EH_SEQ register.
//
//*****************************************************************************
#define FACTORY_CFG_FLASH_EH_SEQ_EH_M \
                                0xFF000000  // Erase hold time in 
                                            // half-microseconds after SAFELV 
                                            // goes low. Value will be 
                                            // converted to number of FCLK 
                                            // cycles by the flash device 
                                            // driver and the converted value 
                                            // is written to the ERA_OH field 
                                            // bits[15:0] of the FSM_ERA_OH 
                                            // register in the flash module 
                                            // when an erase/program operation 
                                            // is initiated. [PROD: DP] 

#define FACTORY_CFG_FLASH_EH_SEQ_EH_S 24
#define FACTORY_CFG_FLASH_EH_SEQ_SEQ_M \
                                0x00FF0000  // Pump sequence control. 

#define FACTORY_CFG_FLASH_EH_SEQ_SEQ_S 16
#define FACTORY_CFG_FLASH_EH_SEQ_VSTAT_M \
                                0x0000F000  // Max number of HCLK cycles 
                                            // allowed for pump brown-out. 
                                            // Value will be written to the 
                                            // VSTAT_CNT field bits[15:12] of 
                                            // the FSM_VSTAT register in the 
                                            // flash module by the flash device 
                                            // driver when an erase/program 
                                            // operation is initiated.. [PROD: 
                                            // DP] 

#define FACTORY_CFG_FLASH_EH_SEQ_VSTAT_S 12
#define FACTORY_CFG_FLASH_EH_SEQ_SM_FREQUENCY_M \
                                0x00000FFF  // Max FCLK frequency allowed for 
                                            // program, erase, and verify 
                                            // reads. 

#define FACTORY_CFG_FLASH_EH_SEQ_SM_FREQUENCY_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_FLASH_VHV_E register.
//
//*****************************************************************************
#define FACTORY_CFG_FLASH_VHV_E_VHV_E_START_M \
                                0xFFFF0000  // Starting VHV-Erase CT for 
                                            // stairstep erase. Value will be 
                                            // written to the BEG_EC_LEVEL 
                                            // field bits[19:16] of the 
                                            // FSM_PRG_PUL register in the 
                                            // flash module by the flash device 
                                            // driver when an erase/program 
                                            // operation is initiated. [PROD: 
                                            // DP] 

#define FACTORY_CFG_FLASH_VHV_E_VHV_E_START_S 16
#define FACTORY_CFG_FLASH_VHV_E_VHV_E_STEP_HIGHT_M \
                                0x0000FFFF  // Number of VHV CTs to step after 
                                            // each erase pulse (up to the 
                                            // max). The actual FMC register 
                                            // value should be one less than 
                                            // this since the FMC starts 
                                            // counting from zero. Value will 
                                            // be written to the EC_STEP_HIGHT 
                                            // field bits[3:0] of the 
                                            // FSM_EC_STEP_HIGHT register in 
                                            // the flash module by the flash 
                                            // device driver when an 
                                            // erase/program operation is 
                                            // initiated. [PROD: DP] 

#define FACTORY_CFG_FLASH_VHV_E_VHV_E_STEP_HIGHT_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_FLASH_PP register.
//
//*****************************************************************************
#define FACTORY_CFG_FLASH_PP_PUMP_SU_M \
                                0xFF000000  // Pump read->non-read mode 
                                            // transition time in 
                                            // half-microseconds (mainly for 
                                            // FPES). 

#define FACTORY_CFG_FLASH_PP_PUMP_SU_S 24
#define FACTORY_CFG_FLASH_PP_MAX_PP_M \
                                0x0000FFFF  // Max program pulse limit per 
                                            // program operation. Value will be 
                                            // written to the MAX_PRG_PUL field 
                                            // bits[11:0] of the FSM_PRG_PUL 
                                            // register in the flash module by 
                                            // the flash device driver when an 
                                            // erase/program operation is 
                                            // initiated. [PROD: DP] 

#define FACTORY_CFG_FLASH_PP_MAX_PP_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_FLASH_PROG_EP register.
//
//*****************************************************************************
#define FACTORY_CFG_FLASH_PROG_EP_MAX_EP_M \
                                0xFFFF0000  // Max erase pulse limit per erase 
                                            // operation. Value will be written 
                                            // to the MAX_ERA_PUL field 
                                            // bits[11:0] of the FSM_ERA_PUL 
                                            // register in the flash module by 
                                            // the flash device driver when an 
                                            // erase/program operation is 
                                            // initiated. [PROD: DP] 

#define FACTORY_CFG_FLASH_PROG_EP_MAX_EP_S 16
#define FACTORY_CFG_FLASH_PROG_EP_PROGRAM_PW_M \
                                0x0000FFFF  // Program pulse width in 
                                            // half-microseconds. Value will be 
                                            // converted to number of FCLK 
                                            // cycles by the flash device 
                                            // driver and the converted value 
                                            // is written to the PROG_PUL_WIDTH 
                                            // field bits[15:0] of the 
                                            // FSM_PRG_PW register in the flash 
                                            // module when a erase/program 
                                            // operation is initiated. [PROD: 
                                            // DP] 

#define FACTORY_CFG_FLASH_PROG_EP_PROGRAM_PW_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_FLASH_ERA_PW register.
//
//*****************************************************************************
#define FACTORY_CFG_FLASH_ERA_PW_ERASE_PW_M \
                                0xFFFFFFFF  // Erase pulse width in 
                                            // half-microseconds. Value will be 
                                            // converted to number of FCLK 
                                            // cycles by the flash device 
                                            // driver and the converted value 
                                            // is written to the FSM_ERA_PW 
                                            // field bits[31:0] of the 
                                            // FSM_ERA_PW register in the flash 
                                            // module when a erase/program 
                                            // operation is initiated. [PROD: 
                                            // DP] 

#define FACTORY_CFG_FLASH_ERA_PW_ERASE_PW_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_FLASH_VHV register.
//
//*****************************************************************************
#define FACTORY_CFG_FLASH_VHV_VHV_P_M \
                                0xFFFF0000  // VHV-Program CT. Value will be 
                                            // written to the bits[23:16] of 
                                            // the FVHVCT2 register in the 
                                            // flash module by the flash device 
                                            // driver when an erase/program 
                                            // operation is initiated. 
                                            // Bits[23:16] in this register 
                                            // covers both the TRIM13_P and 
                                            // VHVCT_P bit fields. [PROD: DP] 

#define FACTORY_CFG_FLASH_VHV_VHV_P_S 16
#define FACTORY_CFG_FLASH_VHV_VHV_E_M \
                                0x0000FFFF  // Max VHV-Erase CT for stairstep 
                                            // erase. This is also the voltage 
                                            // used in parametric tests. Value 
                                            // will be written to the 
                                            // bits[23:16] of the FVHVCT1 
                                            // register in the flash module by 
                                            // the flash device driver when an 
                                            // erase/program operation is 
                                            // initiated. Bits[23:16] of this 
                                            // register covers both the 
                                            // TRIM13_E and VHVCT_E bit fields. 
                                            // [PROD: DP] 

#define FACTORY_CFG_FLASH_VHV_VHV_E_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_FLASH_VHV_PV register.
//
//*****************************************************************************
#define FACTORY_CFG_FLASH_VHV_PV_VHV_PV_M \
                                0xFFFF0000  // VHV-Program Verify CT. Value 
                                            // will be written to bits[7:0] of 
                                            // the FVHVCT1 register in the 
                                            // flash module by the flash device 
                                            // driver when an erase/program 
                                            // operation is initiated. [PROD: 
                                            // DP] 

#define FACTORY_CFG_FLASH_VHV_PV_VHV_PV_S 16
#define FACTORY_CFG_FLASH_VHV_PV_VCG2P5_M \
                                0x0000FF00  // Control gate voltage during 
                                            // read, read margin, and erase 
                                            // verify. Value will be written to 
                                            // the VCG2P5CT field bits[12:8] of 
                                            // the FVNCT register in the flash 
                                            // module by the flash device 
                                            // driver when an erase/program 
                                            // operation is initiated. [PROD: 
                                            // DP] 

#define FACTORY_CFG_FLASH_VHV_PV_VCG2P5_S 8
#define FACTORY_CFG_FLASH_VHV_PV_VINH_M \
                                0x000000FF  // Inhibit voltage applied to 
                                            // unselected columns during 
                                            // programming. 

#define FACTORY_CFG_FLASH_VHV_PV_VINH_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_FLASH_V register.
//
//*****************************************************************************
#define FACTORY_CFG_FLASH_V_VSL_P_M \
                                0xFF000000  // Sourceline voltage applied to 
                                            // the selected block during 
                                            // programming. Value will be 
                                            // written to the VSL_P field 
                                            // bits[15:12] of the FVSLP 
                                            // register in the flash module by 
                                            // the flash device driver when an 
                                            // erase/program operation is 
                                            // initiated. [PROD: DP] 

#define FACTORY_CFG_FLASH_V_VSL_P_S 24
#define FACTORY_CFG_FLASH_V_VWL_P_M \
                                0x00FF0000  // Wordline voltage applied to the 
                                            // selected half-row during 
                                            // programming. Value will be 
                                            // written to the VWLCT_P field 
                                            // bits[4:0] of the FVWLCT register 
                                            // in the flash module by the flash 
                                            // device driver when an 
                                            // erase/program operation is 
                                            // initiated. [PROD: DP] 

#define FACTORY_CFG_FLASH_V_VWL_P_S 16
#define FACTORY_CFG_FLASH_V_V_READ_M \
                                0x0000FF00  // Wordline voltage applied to the 
                                            // selected block during reads and 
                                            // verifies. Value will be written 
                                            // to the VREADCT field bits[3:0] 
                                            // of the FVREADCT register in the 
                                            // flash module by the flash device 
                                            // driver when an erase/program 
                                            // operation is initiated. [PROD: 
                                            // DP] 

#define FACTORY_CFG_FLASH_V_V_READ_S 8
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_USER_ID register.
//
//*****************************************************************************
#define FACTORY_CFG_USER_ID_PG_REV_M \
                                0xF0000000  // PG revision number: This value 
                                            // will be written to the AON_WUC 
                                            // JTAGUSERCODE[31:28] register by 
                                            // boot FW while in safezone. 
                                            // [PROD: DF] 

#define FACTORY_CFG_USER_ID_PG_REV_S 28
#define FACTORY_CFG_USER_ID_VER_M \
                                0x0C000000  // Version number. This value will 
                                            // be written to the AON_WUC 
                                            // JTAGUSERCODE[27:26] register by 
                                            // boot FW while in safezone. 
                                            // [PROD: DF] 

#define FACTORY_CFG_USER_ID_VER_S 26
#define FACTORY_CFG_USER_ID_SEQUENCE_M \
                                0x00780000  // Sequence. This value will be 
                                            // written to the AON_WUC 
                                            // JTAGUSERCODE[22:19] register by 
                                            // boot FW while in safezone. 
                                            // [PROD: DF] 

#define FACTORY_CFG_USER_ID_SEQUENCE_S 19
#define FACTORY_CFG_USER_ID_PKG_M \
                                0x00070000  // Package type. This value will 
                                            // be written to the AON_WUC 
                                            // JTAGUSERCODE[18:16] register by 
                                            // boot FW while in safezone. 
                                            // [PROD: DF] 

#define FACTORY_CFG_USER_ID_PKG_S 16
#define FACTORY_CFG_USER_ID_PROTOCOL_M \
                                0x0000F000  // Protocols supported. This value 
                                            // will be written to the AON_WUC 
                                            // JTAGUSERCODE[15:12] register by 
                                            // boot FW while in safezone. 
                                            // [PROD: DF] 

#define FACTORY_CFG_USER_ID_PROTOCOL_S 12
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_FLASH_OTP_DATA1 register.
//
//*****************************************************************************
#define FACTORY_CFG_FLASH_OTP_DATA1_SAMPLE_PERIODE_M \
                                0xFFFFFF00  // Value will be written to the 
                                            // SAMPLE_PERIODE field bits[23:0] 
                                            // of the SAMPLE_PERIODE register 
                                            // in the flash module by boot FW 
                                            // while in safezone. [PROD: DP] 

#define FACTORY_CFG_FLASH_OTP_DATA1_SAMPLE_PERIODE_S 8
#define FACTORY_CFG_FLASH_OTP_DATA1_WAITSTATES_M \
                                0x000000FF  // Value will be written to the 
                                            // WAITSTATES field bits[7:0] of 
                                            // the WAITSTATES register in the 
                                            // flash module by boot FW while in 
                                            // safezone. In addition this value 
                                            // decremented by 1 will be written 
                                            // to the RWAIT bit field 
                                            // bits[11:8] in the FRDCNTL 
                                            // register if the value is less 
                                            // than the value of the 
                                            // WAIT_SYSCODE field. [PROD: DP] 

#define FACTORY_CFG_FLASH_OTP_DATA1_WAITSTATES_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_FLASH_OTP_DATA2 register.
//
//*****************************************************************************
#define FACTORY_CFG_FLASH_OTP_DATA2_PRE_SAMPLE_M \
                                0xFF000000  // Value will be written to the 
                                            // PRE_SAMPLE field bits[7:0] of 
                                            // the PRE_SAMPLE register in the 
                                            // flash module by boot FW while in 
                                            // safezone. [PROD: DP] 

#define FACTORY_CFG_FLASH_OTP_DATA2_PRE_SAMPLE_S 24
#define FACTORY_CFG_FLASH_OTP_DATA2_SAMHOLD_SA_M \
                                0x00FF0000  // Value will be written to the 
                                            // SAMHOLD_SA field bits[7:0] of 
                                            // the SAMHOLD_SA register in the 
                                            // flash module by boot FW while in 
                                            // safezone. [PROD: DP] 

#define FACTORY_CFG_FLASH_OTP_DATA2_SAMHOLD_SA_S 16
#define FACTORY_CFG_FLASH_OTP_DATA2_SAMHOLD_SU_M \
                                0x0000FF00  // Value will be written to the 
                                            // SAMHOLD_SU field bits[7:0] of 
                                            // the SAMHOLD_SU register in the 
                                            // flash module by boot FW while in 
                                            // safezone. [PROD: DP] 

#define FACTORY_CFG_FLASH_OTP_DATA2_SAMHOLD_SU_S 8
#define FACTORY_CFG_FLASH_OTP_DATA2_VIN_BY_PASS \
                                0x00000010  // Value will be written to the 
                                            // VIN_BY_PASS field bits[8] of the 
                                            // FSEQPMP register in the flash 
                                            // module by boot FW while in 
                                            // safezone. [PROD: DP] 

#define FACTORY_CFG_FLASH_OTP_DATA2_VIN_BY_PASS_M \
                                0x00000010
#define FACTORY_CFG_FLASH_OTP_DATA2_VIN_BY_PASS_S 4
#define FACTORY_CFG_FLASH_OTP_DATA2_ENABLE_SWINTF \
                                0x00000008  // Value will be written to the 
                                            // ENABLE_SWINTF field bits[3] of 
                                            // the CONFIG register in the flash 
                                            // module by boot FW while in 
                                            // safezone. [PROD: DP] 

#define FACTORY_CFG_FLASH_OTP_DATA2_ENABLE_SWINTF_M \
                                0x00000008
#define FACTORY_CFG_FLASH_OTP_DATA2_ENABLE_SWINTF_S 3
#define FACTORY_CFG_FLASH_OTP_DATA2_PROTECTCFG \
                                0x00000004  // Value will be written to the 
                                            // PROTECTCFG field bits[2] of the 
                                            // CONFIG register in the flash 
                                            // module by boot FW while in 
                                            // safezone. [PROD: DP] 

#define FACTORY_CFG_FLASH_OTP_DATA2_PROTECTCFG_M \
                                0x00000004
#define FACTORY_CFG_FLASH_OTP_DATA2_PROTECTCFG_S 2
#define FACTORY_CFG_FLASH_OTP_DATA2_DIS_STANDBY \
                                0x00000002  // Value will be written to the 
                                            // DIS_STANDBY field bits[1] of the 
                                            // CONFIG register in the flash 
                                            // module by boot FW while in 
                                            // safezone. [PROD: DP] 

#define FACTORY_CFG_FLASH_OTP_DATA2_DIS_STANDBY_M \
                                0x00000002
#define FACTORY_CFG_FLASH_OTP_DATA2_DIS_STANDBY_S 1
#define FACTORY_CFG_FLASH_OTP_DATA2_DIS_IDLE \
                                0x00000001  // Value will be written to the 
                                            // DIS_IDLE field bits[0] of the 
                                            // CONFIG register in the flash 
                                            // module by boot FW while in 
                                            // safezone. [PROD: DP] 

#define FACTORY_CFG_FLASH_OTP_DATA2_DIS_IDLE_M \
                                0x00000001
#define FACTORY_CFG_FLASH_OTP_DATA2_DIS_IDLE_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_FLASH_OTP_DATA3 register.
//
//*****************************************************************************
#define FACTORY_CFG_FLASH_OTP_DATA3_EC_STEP_SIZE_M \
                                0xFF800000  // Value will be written to the 
                                            // EC_STEP_SIZE field bits[24:16] 
                                            // of the FSM_STEP_SIZE register in 
                                            // the flash module by the flash 
                                            // device driver when a 
                                            // erase/program operation is 
                                            // initiated. [PROD: DP] 

#define FACTORY_CFG_FLASH_OTP_DATA3_EC_STEP_SIZE_S 23
#define FACTORY_CFG_FLASH_OTP_DATA3_DO_PRECOND \
                                0x00400000  // Value will be written to the 
                                            // DO_PRECOND field bit[23] of the 
                                            // FSM_ST_MACHINE register in the 
                                            // flash module by the flash device 
                                            // driver when a erase/program 
                                            // operation is initiated. Note 
                                            // that during a Total Erase 
                                            // operation the flash bank will 
                                            // always be erased with 
                                            // Precondition enabled independent 
                                            // of the value of this FCFG1 bit 
                                            // field. [PROD: DP] 

#define FACTORY_CFG_FLASH_OTP_DATA3_DO_PRECOND_M \
                                0x00400000
#define FACTORY_CFG_FLASH_OTP_DATA3_DO_PRECOND_S 22
#define FACTORY_CFG_FLASH_OTP_DATA3_MAX_EC_LEVEL_M \
                                0x003C0000  // Value will be written to the 
                                            // MAX_EC_LEVEL field bits[19:16] 
                                            // of the FSM_ERA_PUL register in 
                                            // the flash module by the flash 
                                            // device driver when a 
                                            // erase/program operation is 
                                            // initiated. [PROD: DP] 

#define FACTORY_CFG_FLASH_OTP_DATA3_MAX_EC_LEVEL_S 18
#define FACTORY_CFG_FLASH_OTP_DATA3_TRIM_1P7_M \
                                0x00030000  // Value will be written to the 
                                            // TRIM_1P7 field bits[21:20] of 
                                            // the FSEQCMP register in the 
                                            // flash module by the flash device 
                                            // driver when a erase/program 
                                            // operation is initiated. [PROD: 
                                            // DP] 

#define FACTORY_CFG_FLASH_OTP_DATA3_TRIM_1P7_S 16
#define FACTORY_CFG_FLASH_OTP_DATA3_FLASH_SIZE_M \
                                0x0000FF00  // This value will be written to 
                                            // the SECTORS field bits[7:0] of 
                                            // the FLASH_O_FLASH_SIZE register 
                                            // in the flash module by the boot 
                                            // FW while in safe zone. This 
                                            // register will be write protected 
                                            // by the boot FW by setting the 
                                            // CONFIG-bit in the 
                                            // FLASH_O_CONFIG-register. [PROD: 
                                            // DF] 

#define FACTORY_CFG_FLASH_OTP_DATA3_FLASH_SIZE_S 8
#define FACTORY_CFG_FLASH_OTP_DATA3_WAIT_SYSCODE_M \
                                0x000000FF  // Value will be written to the 
                                            // WAIT_SYSCODE field bits[7:0] of 
                                            // the WAITSYSCODE register in the 
                                            // flash module by boot FW code 
                                            // while in safezone. In addition 
                                            // this value decremented by 1 will 
                                            // be written to the RWAIT bit 
                                            // field bits[11:8] in the FRDCNTL 
                                            // register if the value is less 
                                            // than the value of the WAITSTATES 
                                            // field. [PROD: DP] 

#define FACTORY_CFG_FLASH_OTP_DATA3_WAIT_SYSCODE_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_MAC_BLE_0 register.
//
//*****************************************************************************
#define FACTORY_CFG_MAC_BLE_0_ADDR_0_31_M \
                                0xFFFFFFFF  // The first 32-bits of the 64-bit 
                                            // MAC BLE address [PROD: DF] 

#define FACTORY_CFG_MAC_BLE_0_ADDR_0_31_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_MAC_BLE_1 register.
//
//*****************************************************************************
#define FACTORY_CFG_MAC_BLE_1_ADDR_32_63_M \
                                0xFFFFFFFF  // The last 32-bits of the 64-bit 
                                            // MAC BLE address [PROD: DF] 

#define FACTORY_CFG_MAC_BLE_1_ADDR_32_63_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_MAC_15_4_0 register.
//
//*****************************************************************************
#define FACTORY_CFG_MAC_15_4_0_ADDR_0_31_M \
                                0xFFFFFFFF  // The first 32-bits of the 64-bit 
                                            // MAC 15.4 address [PROD: DF] 

#define FACTORY_CFG_MAC_15_4_0_ADDR_0_31_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_MAC_15_4_1 register.
//
//*****************************************************************************
#define FACTORY_CFG_MAC_15_4_1_ADDR_32_63_M \
                                0xFFFFFFFF  // The last 32-bits of the 64-bit 
                                            // MAC 15.4 address [PROD: DF] 

#define FACTORY_CFG_MAC_15_4_1_ADDR_32_63_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_ICEPICK_DEVICE_ID register.
//
//*****************************************************************************
#define FACTORY_CFG_ICEPICK_DEVICE_ID_DEVICE_ID_M \
                                0xFFFFFFFF  // This field shall holde a value 
                                            // that equals the value of the 
                                            // IcePick DEVICE_ID register. 
                                            // [PROD: X] 

#define FACTORY_CFG_ICEPICK_DEVICE_ID_DEVICE_ID_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_FCFG1_REVISION register.
//
//*****************************************************************************
#define FACTORY_CFG_FCFG1_REVISION_REV_M \
                                0xFFFFFFFF  // The revision number of the 
                                            // FCFG1 layout. This value will be 
                                            // read by application SW in order 
                                            // to determine which FCFG1 
                                            // parameters that have valid 
                                            // values. This revision number 
                                            // must be incremented by 1 before 
                                            // any devices are to be produced 
                                            // if the FCFG1 layout has changed 
                                            // since the previous production of 
                                            // devices. [PROD: X] 

#define FACTORY_CFG_FCFG1_REVISION_REV_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_MISC_OTP_DATA register.
//
//*****************************************************************************
#define FACTORY_CFG_MISC_OTP_DATA_TEST_PROGRAM_REV_M \
                                0x000000FF  // The revision of the test 
                                            // program used in the production 
                                            // process when FCFG1 was 
                                            // programmed. [PROD: X] 

#define FACTORY_CFG_MISC_OTP_DATA_TEST_PROGRAM_REV_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_CONFIG_IF_ADC register.
//
//*****************************************************************************
#define FACTORY_CFG_CONFIG_IF_ADC_FF2ADJ_M \
                                0xF0000000  // Trim value for the FF2ADJ bit 
                                            // field in the IFADC13 register in 
                                            // ADI_0_RF [PROD: X] 

#define FACTORY_CFG_CONFIG_IF_ADC_FF2ADJ_S 28
#define FACTORY_CFG_CONFIG_IF_ADC_FF3ADJ_M \
                                0x0F000000  // Trim value for the FF3ADJ bit 
                                            // field in the IFADC13 register in 
                                            // ADI_0_RF [PROD: X] 

#define FACTORY_CFG_CONFIG_IF_ADC_FF3ADJ_S 24
#define FACTORY_CFG_CONFIG_IF_ADC_INT3ADJ_M \
                                0x00F00000  // Trim value for the INT3ADJ bit 
                                            // field in the IFADC12 register in 
                                            // ADI_0_RF [PROD: X] 

#define FACTORY_CFG_CONFIG_IF_ADC_INT3ADJ_S 20
#define FACTORY_CFG_CONFIG_IF_ADC_FF1ADJ_M \
                                0x000F0000  // Trim value for the FF1ADJ bit 
                                            // field in the IFADC12 register in 
                                            // ADI_0_RF [PROD: X] 

#define FACTORY_CFG_CONFIG_IF_ADC_FF1ADJ_S 16
#define FACTORY_CFG_CONFIG_IF_ADC_AAFCAP_M \
                                0x0000C000  // Trim value for the AAFCAP bit 
                                            // field in the IFADC11 register in 
                                            // ADI_0_RF [PROD: X] 

#define FACTORY_CFG_CONFIG_IF_ADC_AAFCAP_S 14
#define FACTORY_CFG_CONFIG_IF_ADC_INT2ADJ_M \
                                0x00003C00  // Trim value for the INT2ADJ bit 
                                            // field in the IFADC11 register in 
                                            // ADI_0_RF [PROD: X] 

#define FACTORY_CFG_CONFIG_IF_ADC_INT2ADJ_S 10
#define FACTORY_CFG_CONFIG_IF_ADC_RESISTOR_TREE_TRIM_M \
                                0x000003E0  // Trim value for the 
                                            // RESISTOR_TREE_TRIM bit field in 
                                            // the IFDLDO2 register in ADI_0_RF 
                                            // [PROD: X] 

#define FACTORY_CFG_CONFIG_IF_ADC_RESISTOR_TREE_TRIM_S 5
#define FACTORY_CFG_CONFIG_IF_ADC_FEEDBACK_TREE_TRIM_M \
                                0x0000001F  // Trim value for the 
                                            // FEEDBACK_TREE_TRIM bit field in 
                                            // the IFALDO2 register in ADI_0_RF 
                                            // [PROD: X] 

#define FACTORY_CFG_CONFIG_IF_ADC_FEEDBACK_TREE_TRIM_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_CONFIG_OSC_TOP register.
//
//*****************************************************************************
#define FACTORY_CFG_CONFIG_OSC_TOP_XOSC_HF_ROW_Q12_M \
                                0x3C000000  // Trim value for the 
                                            // XOSC_HF_ROW_Q12 bit field in the 
                                            // ANABYPASS_VALUE1 register in 
                                            // OSC_DIG [PROD: X] 

#define FACTORY_CFG_CONFIG_OSC_TOP_XOSC_HF_ROW_Q12_S 26
#define FACTORY_CFG_CONFIG_OSC_TOP_XOSC_HF_COLUMN_Q12_M \
                                0x03FFFC00  // Trim value for the 
                                            // XOSC_HF_COLUMN_Q12 bit field in 
                                            // the ANABYPASS_VALUE1 register in 
                                            // OSC_DIG [PROD: X] 

#define FACTORY_CFG_CONFIG_OSC_TOP_XOSC_HF_COLUMN_Q12_S 10
#define FACTORY_CFG_CONFIG_OSC_TOP_RCOSCLF_CTUNE_TRIM_M \
                                0x000003FC  // Trim value for the 
                                            // RCOSCLF_CTUNE_TRIM bit field in 
                                            // the XOSCLF_RCOSCLF_CTRL register 
                                            // in OSC_DIG [PROD: X] 

#define FACTORY_CFG_CONFIG_OSC_TOP_RCOSCLF_CTUNE_TRIM_S 2
#define FACTORY_CFG_CONFIG_OSC_TOP_RCOSCLF_RTUNE_TRIM_M \
                                0x00000003  // Trim value for the 
                                            // RCOSCLF_RTUNE_TRIM bit field in 
                                            // the XOSCLF_RCOSCLF_CTRL register 
                                            // in OSC_DIG [PROD: X] 

#define FACTORY_CFG_CONFIG_OSC_TOP_RCOSCLF_RTUNE_TRIM_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_CONFIG_RF_FRONTEND register.
//
//*****************************************************************************
#define FACTORY_CFG_CONFIG_RF_FRONTEND_IFAMP_IB_M \
                                0xF0000000  // Trim value used for the 
                                            // IFAMP_IB bit field in the 
                                            // CTL_IFAMP3 register in ADI_0_RF 
                                            // [PROD: X] 

#define FACTORY_CFG_CONFIG_RF_FRONTEND_IFAMP_IB_S 28
#define FACTORY_CFG_CONFIG_RF_FRONTEND_LNA_IB_M \
                                0x0F000000  // Trim value used for the LNA_IB 
                                            // bit field in the CTL_LNA2 
                                            // register in ADI_0_RF [PROD: X] 

#define FACTORY_CFG_CONFIG_RF_FRONTEND_LNA_IB_S 24
#define FACTORY_CFG_CONFIG_RF_FRONTEND_IFAMP_TRIM_M \
                                0x00F80000  // Trim value used for the 
                                            // IFAMP_TRIM bit field in the 
                                            // CTL_IFAMP0 register in ADI_0_RF 
                                            // [PROD: X] 

#define FACTORY_CFG_CONFIG_RF_FRONTEND_IFAMP_TRIM_S 19
#define FACTORY_CFG_CONFIG_RF_FRONTEND_CTL_PA0_TRIM_M \
                                0x00078000  // Trim value used for the TRIM 
                                            // bit field in the CTL_PA0 
                                            // register in ADI_0_RF [PROD: X] 

#define FACTORY_CFG_CONFIG_RF_FRONTEND_CTL_PA0_TRIM_S 15
#define FACTORY_CFG_CONFIG_RF_FRONTEND_CTL_PA1_GC_M \
                                0x00006000  // Trim value used for the GC bit 
                                            // field in the CTL_PA1 register in 
                                            // ADI_0_RF [PROD: X] 

#define FACTORY_CFG_CONFIG_RF_FRONTEND_CTL_PA1_GC_S 13
#define FACTORY_CFG_CONFIG_RF_FRONTEND_CTL_PA1_IB_M \
                                0x00001F80  // Trim value used for the IB bit 
                                            // field in the CTL_PA1 register in 
                                            // ADI_0_RF [PROD: X] 

#define FACTORY_CFG_CONFIG_RF_FRONTEND_CTL_PA1_IB_S 7
#define FACTORY_CFG_CONFIG_RF_FRONTEND_RFLDO_RESISTOR_TRIM_M \
                                0x0000007F  // Trim value for the 
                                            // RFLDO_RESISTOR_TRIM bit field in 
                                            // the RF_LDO_2 register in 
                                            // ADI_0_RF [PROD: X] 

#define FACTORY_CFG_CONFIG_RF_FRONTEND_RFLDO_RESISTOR_TRIM_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_CONFIG_SYNTH register.
//
//*****************************************************************************
#define FACTORY_CFG_CONFIG_SYNTH_LDOVCO_RESISTOR_TRIM_M \
                                0x00000FC0  // Trim value ised for the 
                                            // LDOVCO_RESISTOR_TRIM bit field 
                                            // in theCTL_LDOVCO_2 register in 
                                            // ADI_1_SYNTH [PROD: X] 

#define FACTORY_CFG_CONFIG_SYNTH_LDOVCO_RESISTOR_TRIM_S 6
#define FACTORY_CFG_CONFIG_SYNTH_SLDO_RESISTOR_TRIM_M \
                                0x0000003F  // Trim value ised for the 
                                            // SLDO_RESISTOR_TRIM bit field in 
                                            // the SLDO_2 register in 
                                            // ADI_1_SYNTH [PROD: X] 

#define FACTORY_CFG_CONFIG_SYNTH_SLDO_RESISTOR_TRIM_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_SOC_ADC_ABS_GAIN register.
//
//*****************************************************************************
#define FACTORY_CFG_SOC_ADC_ABS_GAIN_SOC_ADC_ABS_GAIN_TEMP2_M \
                                0xFFFF0000  // SOC_ADC gain in absolute 
                                            // reference mode at temperature 2 
                                            // (85C?). Calculated in production 
                                            // test. [PROD: X] 

#define FACTORY_CFG_SOC_ADC_ABS_GAIN_SOC_ADC_ABS_GAIN_TEMP2_S 16
#define FACTORY_CFG_SOC_ADC_ABS_GAIN_SOC_ADC_ABS_GAIN_TEMP1_M \
                                0x0000FFFF  // SOC_ADC gain in absolute 
                                            // reference mode at temperature 1 
                                            // (25C?). Calculated in production 
                                            // test.. [PROD: X] 

#define FACTORY_CFG_SOC_ADC_ABS_GAIN_SOC_ADC_ABS_GAIN_TEMP1_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_SOC_ADC_REL_GAIN register.
//
//*****************************************************************************
#define FACTORY_CFG_SOC_ADC_REL_GAIN_SOC_ADC_REL_GAIN_TEMP2_M \
                                0xFFFF0000  // SOC_ADC gain in relative 
                                            // reference mode at temperature 2 
                                            // (85C?). Calculated in production 
                                            // test.. [PROD: X] 

#define FACTORY_CFG_SOC_ADC_REL_GAIN_SOC_ADC_REL_GAIN_TEMP2_S 16
#define FACTORY_CFG_SOC_ADC_REL_GAIN_SOC_ADC_REL_GAIN_TEMP1_M \
                                0x0000FFFF  // SOC_ADC gain in relative 
                                            // reference mode at temperature 1 
                                            // (25C?). Calculated in production 
                                            // test.. [PROD: X] 

#define FACTORY_CFG_SOC_ADC_REL_GAIN_SOC_ADC_REL_GAIN_TEMP1_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_SOC_ADC_EXT_GAIN register.
//
//*****************************************************************************
#define FACTORY_CFG_SOC_ADC_EXT_GAIN_SOC_ADC_EXT_GAIN_TEMP2_M \
                                0xFFFF0000  // SOC_ADC gain in external 
                                            // reference mode at temperature 2 
                                            // (85C?). Calculated in production 
                                            // test.. [PROD: X] 

#define FACTORY_CFG_SOC_ADC_EXT_GAIN_SOC_ADC_EXT_GAIN_TEMP2_S 16
#define FACTORY_CFG_SOC_ADC_EXT_GAIN_SOC_ADC_EXT_GAIN_TEMP1_M \
                                0x0000FFFF  // SOC_ADC gain in external 
                                            // reference mode at temperature 1 
                                            // (25C?). Calculated in production 
                                            // test.. [PROD: X] 

#define FACTORY_CFG_SOC_ADC_EXT_GAIN_SOC_ADC_EXT_GAIN_TEMP1_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_SOC_ADC_OFFSET_INT register.
//
//*****************************************************************************
#define FACTORY_CFG_SOC_ADC_OFFSET_INT_SOC_ADC_REL_OFFSET_TEMP2_M \
                                0xFF000000  // SOC_ADC offset in relative 
                                            // reference mode at temperature 2 
                                            // (85C?). Signed 8-bit number. 
                                            // Calculated in production test.. 
                                            // [PROD: X] 

#define FACTORY_CFG_SOC_ADC_OFFSET_INT_SOC_ADC_REL_OFFSET_TEMP2_S 24
#define FACTORY_CFG_SOC_ADC_OFFSET_INT_SOC_ADC_REL_OFFSET_TEMP1_M \
                                0x00FF0000  // SOC_ADC offset in relative 
                                            // reference mode at temperature 1 
                                            // (25C?). Signed 8-bit number. 
                                            // Calculated in production test.. 
                                            // [PROD: X] 

#define FACTORY_CFG_SOC_ADC_OFFSET_INT_SOC_ADC_REL_OFFSET_TEMP1_S 16
#define FACTORY_CFG_SOC_ADC_OFFSET_INT_SOC_ADC_ABS_OFFSET_TEMP2_M \
                                0x0000FF00  // SOC_ADC offset in absolute 
                                            // reference mode at temperature 2 
                                            // (85C?). Signed 8-bit number. 
                                            // Calculated in production test.. 
                                            // [PROD: X] 

#define FACTORY_CFG_SOC_ADC_OFFSET_INT_SOC_ADC_ABS_OFFSET_TEMP2_S 8
#define FACTORY_CFG_SOC_ADC_OFFSET_INT_SOC_ADC_ABS_OFFSET_TEMP1_M \
                                0x000000FF  // SOC_ADC offset in absolute 
                                            // reference mode at temperature 1 
                                            // (25C?). Signed 8-bit number. 
                                            // Calculated in production test.. 
                                            // [PROD: X] 

#define FACTORY_CFG_SOC_ADC_OFFSET_INT_SOC_ADC_ABS_OFFSET_TEMP1_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_SOC_ADC_REF_TRIM_AND_OFFSET_EXT register.
//
//*****************************************************************************
#define FACTORY_CFG_SOC_ADC_REF_TRIM_AND_OFFSET_EXT_SOC_ADC_EXT_OFFSET_TEMP2_M \
                                0xFF000000  // SOC_ADC offset in external 
                                            // reference mode at temperature 2 
                                            // (85C?). Signed 8-bit number. 
                                            // Calculated in production test.. 
                                            // [PROD: X] 

#define FACTORY_CFG_SOC_ADC_REF_TRIM_AND_OFFSET_EXT_SOC_ADC_EXT_OFFSET_TEMP2_S 24
#define FACTORY_CFG_SOC_ADC_REF_TRIM_AND_OFFSET_EXT_SOC_ADC_EXT_OFFSET_TEMP1_M \
                                0x00FF0000  // SOC_ADC offset in external 
                                            // reference mode at temperature 1 
                                            // (25C?). Signed 8-bit number. 
                                            // Calculated in production test.. 
                                            // [PROD: X] 

#define FACTORY_CFG_SOC_ADC_REF_TRIM_AND_OFFSET_EXT_SOC_ADC_EXT_OFFSET_TEMP1_S 16
#define FACTORY_CFG_SOC_ADC_REF_TRIM_AND_OFFSET_EXT_TEST_TEMP_INDEX2_M \
                                0x0000C000  // Index of TEST_TEMP1-4 that was 
                                            // used to when the _TEMP2 fields 
                                            // for SOC_ADC were written. [PROD: 
                                            // X] 

#define FACTORY_CFG_SOC_ADC_REF_TRIM_AND_OFFSET_EXT_TEST_TEMP_INDEX2_S 14
#define FACTORY_CFG_SOC_ADC_REF_TRIM_AND_OFFSET_EXT_SOC_ADC_REF_VOLTAGE_TRIM_TEMP2_M \
                                0x00003F00  // Value to write in 
                                            // ADI4_AUX.CTL2_3_ADC_REF[5:0] at 
                                            // temperature 2 (85C?). [PROD: X] 

#define FACTORY_CFG_SOC_ADC_REF_TRIM_AND_OFFSET_EXT_SOC_ADC_REF_VOLTAGE_TRIM_TEMP2_S 8
#define FACTORY_CFG_SOC_ADC_REF_TRIM_AND_OFFSET_EXT_TEST_TEMP_INDEX1_M \
                                0x000000C0  // Index of TEST_TEMP1-4 that was 
                                            // used to when the _TEMP1 fields 
                                            // for SOC_ADC were written. This 
                                            // should always be room temp. 
                                            // [PROD: X] 

#define FACTORY_CFG_SOC_ADC_REF_TRIM_AND_OFFSET_EXT_TEST_TEMP_INDEX1_S 6
#define FACTORY_CFG_SOC_ADC_REF_TRIM_AND_OFFSET_EXT_SOC_ADC_REF_VOLTAGE_TRIM_TEMP1_M \
                                0x0000003F  // Value to write in 
                                            // ADI4_AUX.CTL2_3_ADC_REF[5:0] at 
                                            // temperature 1 (25C?). [PROD: X] 

#define FACTORY_CFG_SOC_ADC_REF_TRIM_AND_OFFSET_EXT_SOC_ADC_REF_VOLTAGE_TRIM_TEMP1_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_AMPCOMP_TH1 register.
//
//*****************************************************************************
#define FACTORY_CFG_AMPCOMP_TH1_HPMRAMP2_TH_M \
                                0xFC000000  // HPM Ramp2 amplitude threshhold. 
                                            // In HPM_RAMP2, if amp < 
                                            // HPMRAMP2_TH then move on. [PROD: 
                                            // X] 

#define FACTORY_CFG_AMPCOMP_TH1_HPMRAMP2_TH_S 26
#define FACTORY_CFG_AMPCOMP_TH1_HPMRAMP3_LTH_M \
                                0x00FC0000  // HPM Ramp3 low amplitude 
                                            // threshhold. In HPM_RAMP3, if amp 
                                            // > HPMRAMP3_LTH && amp < 
                                            // HPMRAMP3_HTH then move on 
                                            // HPM_UPDATE. [PROD: X] 

#define FACTORY_CFG_AMPCOMP_TH1_HPMRAMP3_LTH_S 18
#define FACTORY_CFG_AMPCOMP_TH1_HPMRAMP3_HTH_M \
                                0x0000FC00  // In HPM_RAMP3, if amp > 
                                            // HPMRAMP3_LTH && amp < 
                                            // HPMRAMP3_HTH then move on to 
                                            // HPM_UPDATE. [PROD: X] 

#define FACTORY_CFG_AMPCOMP_TH1_HPMRAMP3_HTH_S 10
#define FACTORY_CFG_AMPCOMP_TH1_IBIASCAP_LPTOHP_OL_CNT_M \
                                0x000003C0  // During XOSC mode transition, 
                                            // CAP trim and IBIAS trim should 
                                            // be modified by this amount. 
                                            // IBIAS and CAP trim open loop 
                                            // count. CAP_REM is remainder of 
                                            // the CAP that is left to reach 
                                            // the final cap value. [PROD: X] 

#define FACTORY_CFG_AMPCOMP_TH1_IBIASCAP_LPTOHP_OL_CNT_S 6
#define FACTORY_CFG_AMPCOMP_TH1_HPMRAMP1_TH_M \
                                0x0000003F  // During XOSC mode transition, 
                                            // CAP trim and IBIAS trim should 
                                            // be modified by this amount. 
                                            // IBIAS and CAP trim open loop 
                                            // count. CAP_REM is remainder of 
                                            // the CAP that is left to reach 
                                            // the final cap value. [PROD: X] 

#define FACTORY_CFG_AMPCOMP_TH1_HPMRAMP1_TH_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_AMPCOMP_TH2 register.
//
//*****************************************************************************
#define FACTORY_CFG_AMPCOMP_TH2_LPMUPDATE_LTH_M \
                                0xFC000000  // LPM Update low amplitude 
                                            // threshhold. if amp > 
                                            // LPMUPDATE_LTH && amp < 
                                            // LPMUPDATE_HTH then move on. 
                                            // [PROD: X] 

#define FACTORY_CFG_AMPCOMP_TH2_LPMUPDATE_LTH_S 26
#define FACTORY_CFG_AMPCOMP_TH2_LPMUPDATE_HTM_M \
                                0x00FC0000  // LPM Update high amplitude 
                                            // threshhold. if amp > 
                                            // LPMUPDATE_LTH && amp < 
                                            // LPMUPDATE_HTH then move on. 
                                            // [PROD: X] 

#define FACTORY_CFG_AMPCOMP_TH2_LPMUPDATE_HTM_S 18
#define FACTORY_CFG_AMPCOMP_TH2_ADC_COMP_AMPTH_LPM_M \
                                0x0000FC00  // When ADC is forced in 
                                            // comparator mode, this value is 
                                            // used as OPAMP's threshold during 
                                            // LPM_UPDATE mode. Actual 
                                            // amplitude is compared against 
                                            // this threshhold to generate 
                                            // 1-bit adc_threshholdmet 
                                            // indicator output. [PROD: X] 

#define FACTORY_CFG_AMPCOMP_TH2_ADC_COMP_AMPTH_LPM_S 10
#define FACTORY_CFG_AMPCOMP_TH2_ADC_COMP_AMPTH_HPM_M \
                                0x000000FC  // When ADC is forced in 
                                            // comparator mode, this value is 
                                            // used as OPAMP's threshold during 
                                            // HPM_UPDATE mode. Actual 
                                            // amplitude is compared against 
                                            // this threshhold to generate 
                                            // 1-bit adc_threshholdmet 
                                            // indicator output. [PROD: X] 

#define FACTORY_CFG_AMPCOMP_TH2_ADC_COMP_AMPTH_HPM_S 2
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_AMPCOMP_CTRL1 register.
//
//*****************************************************************************
#define FACTORY_CFG_AMPCOMP_CTRL1_IBIAS_OFFSET_M \
                                0x00F00000  // Offset values of XOSC IBIAS 
                                            // trim. IBIAS trim value would 
                                            // always be greater than or equal 
                                            // to this offset in both HPM and 
                                            // LPM. [PROD: X] 

#define FACTORY_CFG_AMPCOMP_CTRL1_IBIAS_OFFSET_S 20
#define FACTORY_CFG_AMPCOMP_CTRL1_IBIAS_INIT_M \
                                0x000F0000  // Initial value of XOSC IBIAS 
                                            // trim. During ramping up, IBIAS 
                                            // is set to IBIAS_OFFSET + 
                                            // IBIAS_INIT. [PROD: X] 

#define FACTORY_CFG_AMPCOMP_CTRL1_IBIAS_INIT_S 16
#define FACTORY_CFG_AMPCOMP_CTRL1_LPM_IBIAS_WAIT_CNT_FINAL_M \
                                0x0000FF00  // FSM waits for 
                                            // ddi_lpm_ibias_wait_cnt_final 
                                            // clock cycles in 
                                            // IDAC_DECREMENT_WITH_MEASURE 
                                            // states in order to compensate 
                                            // slow response of the xtal. 
                                            // 8-bits. [PROD: X] 

#define FACTORY_CFG_AMPCOMP_CTRL1_LPM_IBIAS_WAIT_CNT_FINAL_S 8
#define FACTORY_CFG_AMPCOMP_CTRL1_CAP_STEP_M \
                                0x000000F0  // Step size of XOSC CAP trim 
                                            // (both Q1 and Q2) during XOSC 
                                            // mode transition. Can vary from 6 
                                            // to 12. Other values are possible 
                                            // but not valid. [PROD: X] 

#define FACTORY_CFG_AMPCOMP_CTRL1_CAP_STEP_S 4
#define FACTORY_CFG_AMPCOMP_CTRL1_IBIASCAP_HPTOLP_OL_CNT_M \
                                0x0000000F  // During HPM to LPM transition, 
                                            // CAP trim and IBIAS trim should 
                                            // be modified by this amount. 
                                            // IBIAS and CAP trim open loop 
                                            // count. CAP_REM is remainder of 
                                            // the CAP that is left to reach 
                                            // the final cap value. Do not need 
                                            // to program this. CAP_TRIM = 
                                            // CAP_INIT - 
                                            // CAP_STEP*IBIASCAP_HPTOLP_OL_CNT 
                                            // - CAP_REM; IBIAS_TRIM = 
                                            // IBIAS_INIT - 
                                            // 1*IBIASCAP_HPTOLP_OL_CNT; Here, 
                                            // cap_init is decimal conversion 
                                            // of cap_init_col and 
                                            // cap_init_row. [PROD: X] 

#define FACTORY_CFG_AMPCOMP_CTRL1_IBIASCAP_HPTOLP_OL_CNT_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_ANABYPASS_VALUE2 register.
//
//*****************************************************************************
#define FACTORY_CFG_ANABYPASS_VALUE2_XOSC_HF_IBIASTHERM_M \
                                0x00003FFF  // Value of xosc_hf_ibiastherm 
                                            // when oscdig is bypassed. [PROD: 
                                            // X] 

#define FACTORY_CFG_ANABYPASS_VALUE2_XOSC_HF_IBIASTHERM_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_CONFIG_MISC_ADC register.
//
//*****************************************************************************
#define FACTORY_CFG_CONFIG_MISC_ADC_RSSI_OFFSET_M \
                                0x0001FE00  // Value for RSSI measured in 
                                            // production test [PROD: X] 

#define FACTORY_CFG_CONFIG_MISC_ADC_RSSI_OFFSET_S 9
#define FACTORY_CFG_CONFIG_MISC_ADC_QUANTCTLTHRES_M \
                                0x000001C0  // Trim value for the 
                                            // QUANTCTLTHRES bit field in the 
                                            // IFADC21 register in ADI_0_RF 
                                            // [PROD: X] 

#define FACTORY_CFG_CONFIG_MISC_ADC_QUANTCTLTHRES_S 6
#define FACTORY_CFG_CONFIG_MISC_ADC_DACTRIM_M \
                                0x0000003F  // Trim value for the DACTRIM bit 
                                            // field in the IFADC14 register in 
                                            // ADI_0_RF [PROD: X] 

#define FACTORY_CFG_CONFIG_MISC_ADC_DACTRIM_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_TEST_TEMPS register.
//
//*****************************************************************************
#define FACTORY_CFG_TEST_TEMPS_TEST_TEMP4_M \
                                0xFF000000  // Temperature for the 4. test 
                                            // insertion. Valid values -40C to 
                                            // 125C. 0xFF means not (yet) run. 
                                            // [PROD: X] 

#define FACTORY_CFG_TEST_TEMPS_TEST_TEMP4_S 24
#define FACTORY_CFG_TEST_TEMPS_TEST_TEMP3_M \
                                0x00FF0000  // Temperature for the 3. test 
                                            // insertion. Valid values -40C to 
                                            // 125C. 0xFF means not (yet) run. 
                                            // [PROD: X] 

#define FACTORY_CFG_TEST_TEMPS_TEST_TEMP3_S 16
#define FACTORY_CFG_TEST_TEMPS_TEST_TEMP2_M \
                                0x0000FF00  // Temperature for the 2. test 
                                            // insertion. Valid values -40C to 
                                            // 125C. 0xFF means not (yet) run. 
                                            // [PROD: X] 

#define FACTORY_CFG_TEST_TEMPS_TEST_TEMP2_S 8
#define FACTORY_CFG_TEST_TEMPS_TEST_TEMP1_M \
                                0x000000FF  // Temperature for the 1. test 
                                            // insertion. Valid values -40C to 
                                            // 125C. 0xFF means not (yet) run. 
                                            // [PROD: X] 

#define FACTORY_CFG_TEST_TEMPS_TEST_TEMP1_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_VOLT_TRIM register.
//
//*****************************************************************************
#define FACTORY_CFG_VOLT_TRIM_VDDR_TRIM_HH_M \
                                0x1F000000  // TBD: Trim value for 1.94V VDDR 
                                            // found in production test (for 
                                            // CC13xx high PA output power 
                                            // only). 

#define FACTORY_CFG_VOLT_TRIM_VDDR_TRIM_HH_S 24
#define FACTORY_CFG_VOLT_TRIM_VDDR_TRIM_H_M \
                                0x001F0000  // Trim value for 1.85V VDDR found 
                                            // in production test (for external 
                                            // VDDR load mode) 

#define FACTORY_CFG_VOLT_TRIM_VDDR_TRIM_H_S 16
#define FACTORY_CFG_VOLT_TRIM_VDDR_TRIM_SLEEP_H_M \
                                0x00001F00  // Trim value for 1.75V VDDR 
                                            // recharge target found in 
                                            // production test (for external 
                                            // VDDR load mode). 

#define FACTORY_CFG_VOLT_TRIM_VDDR_TRIM_SLEEP_H_S 8
#define FACTORY_CFG_VOLT_TRIM_TRIMBOD_H_M \
                                0x0000001F  // Trim value for 2.0V VDDS BOD 
                                            // target found in production test. 

#define FACTORY_CFG_VOLT_TRIM_TRIMBOD_H_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_OSC_CONF register.
//
//*****************************************************************************
#define FACTORY_CFG_OSC_CONF_XOSC_OPTION \
                                0x00040000  // 1 = XOSC_HF available (default) 
                                            // 0 = XOSC_HF unavailable (may not 
                                            // be bonded out) 

#define FACTORY_CFG_OSC_CONF_XOSC_OPTION_M \
                                0x00040000
#define FACTORY_CFG_OSC_CONF_XOSC_OPTION_S 18
#define FACTORY_CFG_OSC_CONF_BAW_OPTION \
                                0x00020000  // 1 = BAW unavailable (default) 0 
                                            // = BAW available 

#define FACTORY_CFG_OSC_CONF_BAW_OPTION_M \
                                0x00020000
#define FACTORY_CFG_OSC_CONF_BAW_OPTION_S 17
#define FACTORY_CFG_OSC_CONF_BAW_FREQ \
                                0x00010000  // 1 = 2520MHz (default) 0 = 
                                            // 840MHz 

#define FACTORY_CFG_OSC_CONF_BAW_FREQ_M \
                                0x00010000
#define FACTORY_CFG_OSC_CONF_BAW_FREQ_S 16
#define FACTORY_CFG_OSC_CONF_BAW_TRIM_M \
                                0x0000FFFF  // (TBD contents for now, trimmed 
                                            // in production test for BAW 
                                            // devices 

#define FACTORY_CFG_OSC_CONF_BAW_TRIM_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_FREQ_OFFSET register.
//
//*****************************************************************************
#define FACTORY_CFG_FREQ_OFFSET_BAW_COMP_P0_M \
                                0xFFFF0000  // Signed 16-bit value, 
                                            // representing the frequency 
                                            // offset at 27 degrees C. 

#define FACTORY_CFG_FREQ_OFFSET_BAW_COMP_P0_S 16
#define FACTORY_CFG_FREQ_OFFSET_BAW_COMP_P1_M \
                                0x0000FF00  // Signed 8-bit value, 
                                            // representing the first order 
                                            // frequency offset slope. 

#define FACTORY_CFG_FREQ_OFFSET_BAW_COMP_P1_S 8
#define FACTORY_CFG_FREQ_OFFSET_BAW_COMP_P2_M \
                                0x000000FF  // Signed 8-bit value, 
                                            // representing the second order 
                                            // frequency offset slope. The 
                                            // actual frequency of the clock 
                                            // would be defined as 48MHz∙(1+d), 
                                            // where d = P0∙2¯²² + 
                                            // P1∙(T-27)∙2¯²⁵ + 
                                            // P2∙(T-27)²∙2¯³¹. 

#define FACTORY_CFG_FREQ_OFFSET_BAW_COMP_P2_S 0
//*****************************************************************************
//
// The following are defines for the bit fields in the 
// FACTORY_CFG_O_CAP_TRIM register.
//
//*****************************************************************************
#define FACTORY_CFG_CAP_TRIM_FLUX_CAP_0P28_TRIM_M \
                                0xFFFF0000  

#define FACTORY_CFG_CAP_TRIM_FLUX_CAP_0P28_TRIM_S 16
#define FACTORY_CFG_CAP_TRIM_FLUX_CAP_0P4_TRIM_M \
                                0x0000FFFF  

#define FACTORY_CFG_CAP_TRIM_FLUX_CAP_0P4_TRIM_S 0


#endif // __FACTORY_CFG_H__

