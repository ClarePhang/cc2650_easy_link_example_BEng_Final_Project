//------------------------------------------------------------------------------
// TI Confidential - NDA Restrictions
//
// Copyright (c) 2011 Texas Instruments, Inc.
//
//    This is an unpublished work created in the year stated above.
//    Texas Instruments owns all rights in and to this work and
//    intends to maintain and protect it as an unpublished copyright.
//    In the event of either inadvertent or deliberate publication,
//    the above stated date shall be treated as the year of first
//    publication. In the event of such publication, Texas Instruments
//    intends to enforce its rights in the work under the copyright
//    laws as a published work.
//
//------------------------------------------------------------------------------
///
/// \file            ieee_cmd.h
/// \brief           Definitions of API for IEEE 802.15.4 commands
///
///                  This file is generated by create_command.pl
///
/// \author          Low Power RF Wireless Business Unit
///                  Helge Coward (h.coward@ti.com)
///
/// \date            Thu Nov 17 10:26:10 CET 2011
///
//------------------------------------------------------------------------------

#ifndef __IEEE_CMD_H
#define __IEEE_CMD_H

#include <stdint.h>
#include "mailbox.h"

#define CMD_IEEE_RX                                             0x2801
typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint8_t channel;
   struct {
      uint8_t bAutoFlushCrc:1;
      uint8_t bAutoFlushIgn:1;
      uint8_t bIncludePhyHdr:1;
      uint8_t bIncludeCrc:1;
      uint8_t bAppendRssi:1;
      uint8_t bAppendCorrCrc:1;
      uint8_t bAppendSrcInd:1;
      uint8_t bAppendTimestamp:1;
   } rxConfig;
   dataQueue_t* pRxQ;
   uint8_t* pOutput;
   struct {
      uint16_t frameFiltEn:1;
      uint16_t frameFiltStop:1;
      uint16_t autoAckEn:1;
      uint16_t slottedAckEn:1;
      uint16_t autoPendEn:1;
      uint16_t defaultPend:1;
      uint16_t bPendDataReqOnly:1;
      uint16_t bPanCoord:1;
      uint16_t maxFrameVersion:2;
      uint16_t fcfReservedMask:3;
      uint16_t modifyFtFilter:2;
      uint16_t bStrictLenFilter:1;
   } frameFiltOpt;
   struct {
      uint8_t bAcceptFt0Beacon:1;
      uint8_t bAcceptFt1Data:1;
      uint8_t bAcceptFt2Ack:1;
      uint8_t bAcceptFt3MacCmd:1;
      uint8_t bAcceptFt4Reserved:1;
      uint8_t bAcceptFt5Reserved:1;
      uint8_t bAcceptFt6Reserved:1;
      uint8_t bAcceptFt7Reserved:1;
   } frameTypes;
   struct {
      uint8_t ccaEnEnergy:1;
      uint8_t ccaEnCorr:1;
      uint8_t ccaEnSync:1;
      uint8_t ccaCorrOp:1;
      uint8_t ccaSyncOp:1;
      uint8_t ccaCorrThr:2;
   } ccaOpt;
   int8_t ccaRssiThr;
   uint8_t __dummy0;
   uint8_t numExtEntries;
   uint8_t numShortEntries;
   uint32_t* pExtEntryList;
   uint32_t* pShortEntryList;
   uint64_t localExtAddr;
   uint16_t localShortAddr;
   uint16_t localPanID;
   uint16_t __dummy1;
   uint8_t __dummy2;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } endTrigger;
   ratmr_t endTime;
} rfc_CMD_IEEE_RX_t;

#define CMD_IEEE_ED_SCAN                                        0x2802
typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint8_t channel;
   struct {
      uint8_t ccaEnEnergy:1;
      uint8_t ccaEnCorr:1;
      uint8_t ccaEnSync:1;
      uint8_t ccaCorrOp:1;
      uint8_t ccaSyncOp:1;
      uint8_t ccaCorrThr:2;
   } ccaOpt;
   int8_t ccaRssiThr;
   uint8_t __dummy0;
   int8_t maxRssi;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } endTrigger;
   ratmr_t endTime;
} rfc_CMD_IEEE_ED_SCAN_t;

#define CMD_IEEE_TX                                             0x2C01
typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   struct {
      uint8_t bIncludePhyHdr:1;
      uint8_t bIncludeCrc:1;
      uint8_t :1;
      uint8_t payloadLenMsb:5;
   } txOpt;
   uint8_t payloadLen;
   uint8_t* pPayload;
   ratmr_t timeStamp;
} rfc_CMD_IEEE_TX_t;

#define CMD_IEEE_CSMA                                           0x2C02
typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint16_t randomState;
   uint8_t macMaxBE;
   uint8_t macMaxCSMABackoffs;
   struct {
      uint8_t initCW:5;
      uint8_t bSlotted:1;
      uint8_t rxOffMode:2;
   } csmaConfig;
   uint8_t NB;
   uint8_t BE;
   uint8_t remainingPeriods;
   int8_t lastRssi;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } endTrigger;
   ratmr_t lastTimeStamp;
   ratmr_t endTime;
} rfc_CMD_IEEE_CSMA_t;

#define CMD_IEEE_RX_ACK                                         0x2C03
typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint8_t seqNo;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } endTrigger;
   ratmr_t endTime;
} rfc_CMD_IEEE_RX_ACK_t;

#define CMD_IEEE_ABORT_BG                                       0x2C04
typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
} rfc_CMD_IEEE_ABORT_BG_t;

#define CMD_IEEE_SETUP                                          0x2C05
typedef struct {
   uint16_t commandNo;
   uint16_t status;
   uint8_t* pNextOp;
   ratmr_t startTime;
   struct {
      uint8_t triggerType:4;
      uint8_t bEnaCmd:1;
      uint8_t triggerNo:2;
      uint8_t pastTrig:1;
   } startTrigger;
   struct {
      uint8_t rule:4;
      uint8_t nSkip:4;
   } condition;
   uint16_t __dummy0;
   uint32_t* pRegOverride;
} rfc_CMD_IEEE_SETUP_t;

#define CMD_IEEE_MOD_CCA                                        0x2001
typedef struct {
   uint16_t commandNo;
   struct {
      uint8_t ccaEnEnergy:1;
      uint8_t ccaEnCorr:1;
      uint8_t ccaEnSync:1;
      uint8_t ccaCorrOp:1;
      uint8_t ccaSyncOp:1;
      uint8_t ccaCorrThr:2;
   } newCcaOpt;
   int8_t newCcaRssiThr;
} rfc_CMD_IEEE_MOD_CCA_t;

#define CMD_IEEE_MOD_FILT                                       0x2002
typedef struct {
   uint16_t commandNo;
   struct {
      uint16_t frameFiltEn:1;
      uint16_t frameFiltStop:1;
      uint16_t autoAckEn:1;
      uint16_t slottedAckEn:1;
      uint16_t autoPendEn:1;
      uint16_t defaultPend:1;
      uint16_t bPendDataReqOnly:1;
      uint16_t bPanCoord:1;
      uint16_t maxFrameVersion:2;
      uint16_t fcfReservedMask:3;
      uint16_t modifyFtFilter:2;
      uint16_t bStrictLenFilter:1;
   } newFrameFiltOpt;
   struct {
      uint8_t bAcceptFt0Beacon:1;
      uint8_t bAcceptFt1Data:1;
      uint8_t bAcceptFt2Ack:1;
      uint8_t bAcceptFt3MacCmd:1;
      uint8_t bAcceptFt4Reserved:1;
      uint8_t bAcceptFt5Reserved:1;
      uint8_t bAcceptFt6Reserved:1;
      uint8_t bAcceptFt7Reserved:1;
   } newFrameTypes;
} rfc_CMD_IEEE_MOD_FILT_t;

#define CMD_IEEE_MOD_SRC_MATCH                                  0x2003
typedef struct {
   uint16_t commandNo;
   struct {
      uint8_t bEnable:1;
      uint8_t srcPend:1;
      uint8_t entryType:1;
   } options;
   uint8_t entryNo;
} rfc_CMD_IEEE_MOD_SRC_MATCH_t;

#define CMD_IEEE_ABORT_FG                                       0x2401
typedef struct {
   uint16_t commandNo;
} rfc_CMD_IEEE_ABORT_FG_t;

#define CMD_IEEE_STOP_FG                                        0x2402
typedef struct {
   uint16_t commandNo;
} rfc_CMD_IEEE_STOP_FG_t;

#define CMD_IEEE_CCA_REQ                                        0x2403
typedef struct {
   uint16_t commandNo;
   int8_t currentRssi;
   int8_t maxRssi;
   struct {
      uint8_t ccaState:2;
      uint8_t ccaEnergy:2;
      uint8_t ccaCorr:2;
      uint8_t ccaSync:1;
   } ccaInfo;
} rfc_CMD_IEEE_CCA_REQ_t;

typedef struct {
   uint8_t nTxAck;
   uint8_t nRxBeacon;
   uint8_t nRxData;
   uint8_t nRxAck;
   uint8_t nRxMacCmd;
   uint8_t nRxReserved;
   uint8_t nRxNok;
   uint8_t nRxIgnored;
   uint8_t nRxBufFull;
   int8_t lastRssi;
   int8_t maxRssi;
   uint8_t __dummy0;
   ratmr_t beaconTimeStamp;
} rfc_ieeeRxOutput_t;

typedef struct {
   uint16_t shortAddr;
   uint16_t panId;
} rfc_shortAddrEntry_t;

typedef struct {
   struct {
      uint8_t corr:6;
      uint8_t bIgnore:1;
      uint8_t bCrcErr:1;
   } status;
} rfc_ieeeRxCorrCrc_t;

typedef struct {
   struct {
      uint16_t frameType:3;
      uint16_t securityEnabled:1;
      uint16_t framePending:1;
      uint16_t ackRequest:1;
      uint16_t panIdCompression:1;
      uint16_t reserved:3;
      uint16_t destAddressingMode:2;
      uint16_t frameVersion:2;
      uint16_t sourceAddressingMode:2;
   } frameControl;
   uint8_t sequenceNumber;
   uint8_t addressingFields;
} rfc_ieeeMacHdr_t;

typedef struct {
   struct {
      uint8_t securityLevel:3;
      uint8_t keyIdentifierMode:2;
   } securityCtrl;
} rfc_ieeeAuxSecCtrl_t;

#endif
